@model NetworkFileShareUI.ViewModels.FolderViewModel
@{
    ViewData["Title"] = "Folder";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="header bg-primary pb-6">
    <div class="container-fluid">
        <div class="header-body">
            <div class="row align-items-center py-4">
                <div class="col-lg-6 col-7">
                    <button type="button" data-toggle="modal" data-target="#uploadFile" class="btn btn-lg btn-outline-success"> <i class="fa fa-upload"></i> Upload </button>
                </div>
                <div class="col-lg-6 col-5 text-right">
                    <div class="alert alert-default" role="alert" id="DefaultDiv" hidden>
                    </div>
                    <div class="alert alert-warning" role="alert" id="WarningDiv" hidden>
                    </div>
                    <div class="alert alert-danger" role="alert" id="DangerDiv" hidden>
                    </div>
                    <div class="alert alert-success" role="alert" id="SuccessDiv" hidden>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid mt--6">
    <div class="row">
        <div class="col-xl-12 order-xl-1">
            <div class="card">
                <div class="card-body">
                    <h2 class="card-title">@Model.Folder.Name (@Model.Folder.FolderTypeName folder)</h2>
                    <div class="table-responsive">
                        <table class="table align-items-center table-dark table-flush">
                            <thead class="thead-dark">
                                <tr>
                                    <th scope="col">File Name</th>
                                    <th scope="col">File Length</th>
                                    <th scope="col">File Type</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody class="list" id="fileRows">
                                @foreach (var file in Model.Files.OrderByDescending(p => p.CreateDate))
                                {
                                    <tr>
                                        <td>
                                            <a href="@Url.Action("ViewFile","File",new { Id = file.Id })" style="color:white;">@file.Name</a>
                                        </td>
                                        @if (string.IsNullOrWhiteSpace(file.FileLength))
                                        {
                                            <td> N/A
                                            </td>
                                        }else
                                        {
                                            <td>
                                                @file.FileLength
                                            </td>
                                        }
                                        <td>
                                            @file.FileExt
                                        </td>
                                        <td>
                                            <a href="@Url.Action("ViewFile","File",new { Id = file.Id })" class="btn btn-info"><i class="fa fa-eye"></i> view </a>
                                            <a href="@Url.Action("DownloadFile","File",new { Id = file.Id })" class="btn btn-primary"><i class="fa fa-cloud-download"></i> download </a>
                                            @if(Model.Folder.FolderTypeName.ToLower() != "server")
                                            {
                                                <a href="#" onclick="DeleteFile('@file.Id','@file.FolderId','@file.Name')" class="btn btn-danger"><i class="fa fa-trash"></i> delete </a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="uploadFile" tabindex="-1" role="dialog" aria-labelledby="uploadFile" aria-hidden="true">
    <div class="modal-dialog modal- modal-dialog-centered modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-body p-0">
                <div class="card bg-secondary border-0 mb-0">
                    <div class="card-header bg-transparent pb-5">
                        <div class="text-muted text-center mt-2 mb-3"><small>upload file</small></div>
                        <div class="btn-wrapper text-center">
                            <i class="fa fa-3x" style="font-family:FontAwesome;">@System.Net.WebUtility.HtmlDecode(Model.Folder.FolderIconName)</i>
                        </div>
                    </div>
                    <div class="card-body px-lg-5 py-lg-5">
                        <form role="form">
                            <div class="form-group mb-3">
                                <div class="input-group input-group-merge input-group-alternative">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="ni ni-cloud-upload-96"></i></span>
                                    </div>
                                    <input class="form-control" placeholder="File" type="file" id="file">
                                </div>
                            </div>
                            <div class="form-group">
                                <select class="form-control" id="AccessLevelId" name="AccessLevelId">
                                    <option disabled selected>select Access Level</option>
                                    @foreach (var item in Model.AccessLevels)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                </select>
                            </div>
                            <div class="text-center">
                                <button type="button" id="btnSubmitUpload" class="btn btn-primary my-4">Upload</button>
                                <p style="color:maroon;" id="modalMessage" hidden></p>
                            </div>
                        </form>
                        <div class="progress-wrapper">
                            <div class="progress" id="progressDiv" hidden>
                                <div class="progress-bar bg-info" id="progressBardiv" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 60%;" hidden></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="modal-notification" tabindex="-1" role="dialog" aria-labelledby="modal-notification" aria-hidden="true">
    <div class="modal-dialog modal-danger modal-dialog-centered modal-" role="document">
        <div class="modal-content bg-gradient-danger">
            <div class="modal-header">
                <h6 class="modal-title" id="modal-title-notification">Delete Folder Alert</h6>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="py-3 text-center">
                    <i class="ni ni-bell-55 ni-3x"></i>
                    <h4 class="heading mt-4">are you sure to complete this action ?</h4>
                    <p>you are going to delete : <b id="modalUsername"></b></p>
                </div>
            </div>
            <div class="modal-footer">
                <a href="#" id="modalBtnAccept" class="btn btn-white">Yes, delete it</a>
                <button type="button" class="btn btn-link text-white ml-auto" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <script type="text/javascript">
    $(function()
    {
            var tmpfolderPath = '@System.Net.WebUtility.UrlEncode(Model.Folder.Path)';
            if ('@TempData["FolderSuccess"]' != "") {
                $("#SuccessDiv").removeAttr('hidden');
                $("#SuccessDiv").html('<strong>Success!</strong> ' + '@TempData["FolderSuccess"]');
                window.setTimeout(function () {
                    $("#SuccessDiv").attr('hidden', 'hidden');
                }, 5000);
            }
            if ('@TempData["FolderError"]' != "") {
                $("#DangerDiv").removeAttr('hidden');
                $("#DangerDiv").html('<strong>Danger!</strong> ' + '@TempData["FolderError"]');
                window.setTimeout(function () {
                    $("#DangerDiv").attr('hidden', 'hidden');
                }, 5000);
            }
            $("#btnSubmitUpload").click(function(e)
            {
                e.preventDefault();
                if ($("#AccessLevelId").find(":selected").text() != "select Access Level") {
                    var formdata = new FormData();
                    let files = document.getElementById("file");
                    if (files.files.length > 0) {

                        for (let i = 0; i < files.files.length; i++) {
                            formdata.append(i, files.files[i]);
                        }
                        formdata.append("AccessLevel", $("#AccessLevelId").val());
                        formdata.append("Folder", '@Model.Folder.Id');
                        formdata.append("FolderPath", tmpfolderPath);
                        var xhr = new XMLHttpRequest();
                        $("#progressDiv").removeAttr('hidden');
                        $("#progressBardiv").removeAttr('hidden');
                        xhr.open("POST", '@Url.Action("UploadFile","File")', true);
                        xhr.upload.onprogress = function (e) {

                            if (e.lengthComputable) {
                                //updating progress bar here
                                $("#progressBardiv").attr('max', e.total);
                                $("#progressBardiv").css('width', e.loaded);

                            }
                        }
                        xhr.upload.onloadstart = function (e) {
                            //updating progress bar on strt of AJAX request
                            $("#progressBardiv").css('width', 0);

                        }
                        xhr.upload.onloadend = function (e) {
                            //called on file upload is done.
                            $("#progressBardiv").css('width', e.loaded);
                            $("#uploadFile").modal('hide');
                            $("#DefaultDiv").removeAttr('hidden');
                            $("#DefaultDiv").html('<strong>success!</strong> ' + 'files uploaded successfully');
                            window.setTimeout(function () {
                                $("#DefaultDiv").attr('hidden', 'hidden');
                            }, 10000);
                        }
                        xhr.onreadystatechange = function () {
                            if (xhr.readyState == 4) {
                                $.ajax(
                                    {
                                        url: '@Url.Action("RefreshFileList","File")',
                                        type: 'post',
                                        datatype: 'json',
                                        data: { Id: '@Model.Folder.Id' },
                                        success: function (result) {
                                            if (result.hasvalue)
                                                $("#fileRows").html(result.files.result);
                                        },
                                        error: function () { }
                                    });
                            }
                        }
                        //send form Data
                        xhr.send(formdata);
                    } else {
                        $("#WarningDiv").removeAttr('hidden');
                        $("#WarningDiv").html('<strong>warning!</strong> ' + 'no file selected');
                        window.setTimeout(function () {
                            $("#WarningDiv").attr('hidden', 'hidden');
                        }, 10000);
                    }
                }else
                {
                    $("#modalMessage").removeAttr('hidden');
                    $("#modalMessage").text('select access level.');
                    window.setTimeout(function () {
                        $("#modalMessage").attr('hidden', 'hidden');
                    }, 5000);
                }
            });
    });
        function DeleteFile(id,fid, name) {
            $("#modalUsername").text(name);
            $("#modalBtnAccept").attr('href', '@Url.Action("SubmitDeleteFile","File")' + '?Id=' + id + '&FolderId=' + fid);
            $("#modal-notification").modal();
        }
    </script>
}